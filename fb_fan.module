<?php

/**
 * @file
 * Facebook Fan module.
 */

/**
 * Implements hook_help().
 */
function fb_fan_help($path, $arg) {
  switch ($path) {
    case 'admin/help#fb_fan':
      return nl2br(file_get_contents(dirname(__FILE__) . '/README.txt'));
    case FB_PATH_ADMIN . '/fb_fan/list':
      return '<p>' . t('Fan Boxes here are also listed on !blocks_page. Enable them from there!', array(
        '!blocks_page' => l(t('blocks page'), 'admin/structure/block'),
      )) . '</p>';
    case FB_PATH_ADMIN . '/fb_fan/create':
      return '<p>' . t("The most important field here is Page ID which is the id of your Page in Facebook. If your Facebook page url has a long number in it then that's your page id. If not, then get your page name from url. It's EXAMPLE for this url: http://www.facebook.com/EXAMPLE. Now go to https://graph.facebook.com/EXAMPLE. Find the line that says id. Copy that number to 'Page ID' field.") . '</p>';
  }
}

/**
 * Implements of hook_permission().
 *
 * Create 2 perms for display advice message and configure advice message.
 */
function fb_fan_permission() {
  return array(
    'administer fb_fan settings' => array(
      'title' => t('Administer fb_fan settings'),
    ),
  );
}

/**
 * Implements of hook_menu().
 *
 * Create admin page in order to change advice message.
 */
function fb_fan_menu() {

  $items = array();

  $items[FB_PATH_ADMIN . '/fb_fan/list'] = array(
    'title' => 'List Fan Boxes',
    'description' => '',
    'page callback' => 'fb_fan_admin_page_list',
    'access arguments' => array(FB_PERM_ADMINISTER),
    'file' => 'fb_fan.admin.inc',
    'type' => MENU_LOCAL_TASK,
  );

  $items[FB_PATH_ADMIN . '/fb_fan/list/edit/%'] = array(
    'title' => 'Edit Fan Box',
    'access arguments' => array(FB_PERM_ADMINISTER),
    'weight' => 11,
    'type' => MENU_CALLBACK,
    'file' => 'fb_fan.admin.inc',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('fb_fan_edit_fanbox_form', TRUE),
  );

  $items[FB_PATH_ADMIN . '/fb_fan/delete/%'] = array(
    'title' => 'Delete Fan Box',
    'description' => '',
    'page callback' => 'fb_fan_admin_page_delete',
    'page arguments' => array(5),
    'access arguments' => array(FB_PERM_ADMINISTER),
    'file' => 'fb_fan.admin.inc',
    'type' => MENU_CALLBACK,
  );

  $items[FB_PATH_ADMIN . '/fb_fan/create'] = array(
    'title' => 'Add Fan Box',
    'access arguments' => array(FB_PERM_ADMINISTER),
    'weight' => 11,
    'type' => MENU_LOCAL_TASK,
    'file' => 'fb_fan.admin.inc',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('fb_fan_edit_fanbox_form'),
  );


  return $items;
}

/**
 * Implements of hook_block_info().
 */
function fb_fan_block_info() {
  $fanboxes = variable_get('fb_fan_fanboxes', array());
  $blocks = array();
  foreach ($fanboxes as $id => $fanbox) {
    $blocks['fb_fan_' . $id] = array(
      'info' => $fanbox['fb_fan_name'],
      'cache' => DRUPAL_CACHE_GLOBAL,
    );
  }
  return $blocks;
}

/**
 * Implements of hook_block_view().
 */
function fb_fan_block_view($block_name = '') {
  $fanboxes = variable_get('fb_fan_fanboxes', array());
  foreach ($fanboxes as $id => $fanbox) {
    if ($block_name == 'fb_fan_' . $id) {
      $css = strlen($fanbox['fb_fan_css_path']) ? $fanbox['fb_fan_css_path'] : FALSE;
      $cache_css = variable_get('fb_fan_cache_css', '0');
      $random = '?' . rand(1, 1000000);
      if (!$css) {
        if (file_exists(path_to_theme() . '/css/fb_fan.css')) {
          $css = 'http://' . $_SERVER['HTTP_HOST'] . '/' . path_to_theme() . '/css/fb_fan.css' . ($cache_css === '0' ? $random : '');
        }
      }
      elseif ($cache_css == '0') {
        $css .= $random;
      }
      $attributes_array = array(
        'profile_id' => $fanbox['fb_fan_profile_id'],
        'stream' => $fanbox['fb_fan_stream'],
        'connections' => $fanbox['fb_fan_connections'],
        'logobar' => $fanbox['fb_fan_logo'],
        'header' => $fanbox['fb_fan_header'],
        'width' => $fanbox['fb_fan_width'],
        'height' => $fanbox['fb_fan_height'],
      );
      $attr = '';
      foreach ($attributes_array as $key => $var) {
        $attr .= $key . '="' . $var . '" ';
      }

      $content = '<fb:fan show_faces="true" ' . $attr . ($css ? 'css="' . $css . '" ' : '') . '></fb:fan>';

      $block = array(
        'subject' => t('Facebook Fan Box'),
        'content' => $content,
      );
      return $block;
    }
  }
}

/**
 * Implements of hook_form_alter().
 */
function fb_fan_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'fb_admin_settings') {
    $form['fb_fan_general_settings'] = array(
      '#title' => t('Facebook Fan Box Settings'),
      '#type' => "fieldset",
      '#collapsible' => TRUE,
    );
    $form['fb_fan_general_settings']['fb_fan_cache_css'] = array(
      '#title' => t('Cache CSS'),
      '#type' => "checkbox",
      '#description' => t("Turn this on by default. For development it is good to disable caching."),
      '#default_value' => variable_get('fb_fan_cache_css', '0'),
    );
  }
}

/**
 * Show warning message if no Facebook application hasn't been created.
 */
function fb_fan_check_if_fb_application_exists() {
  $apps = fb_get_all_apps();
  if (count($apps) == 0) {
    drupal_set_message(t("Fan Boxes need Facebook application. Don't forget to !create one!", array('!create' => l(t('create'), FB_PATH_ADMIN . '/fb_app_create'))), 'warning');
  }
}
