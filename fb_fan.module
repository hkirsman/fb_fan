<?php

/**
 * @file
 * Facebook Fan module.
 */

/**
 * Implements of hook_permission().
 *
 * Create 2 perms for display advice message and configure advice message.
 */
function fb_fan_permission() {
  return array(
    'administer fb_fan settings' => array(
      'title' => t('Administer fb_fan settings'),
    ),
  );
}

/**
 * Implements of hook_menu().
 *
 * Create admin page in order to change advice message.
 */
function fb_fan_menu() {

  $items = array();

  $items['admin/settings/fb_fan'] = array(
    'title' => 'Facebook Fan',
    'description' => 'Requirements to implement a Facebook fan box',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('fb_fan_settings'),
    'access arguments' => array('administer fb_fan settings'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}


/**
 * Implements of hook_settings().
 */
function fb_fan_settings() {
  $form['fb_fan_general_settings'] = array(
    '#title' => t('General Settings'),
    '#type' => "fieldset",
    '#collapsible' => FALSE,
  );
  $form['fb_fan_general_settings']['fb_fan_api_key'] = array(
    '#title' => t('API Key'),
    '#type' => "textfield",
    '#size' => 45,
    '#maxlength' => 50,
    '#required' => TRUE,
    '#description' => t('Ex. 6ef2b05cd423f7d1e252f6be07de8557'),
    '#default_value' => variable_get('fb_fan_api_key', ''),
  );
  $form['fb_fan_general_settings']['fb_fan_profile_id'] = array(
    '#title' => t('Profile ID'),
    '#type' => "textfield",
    '#size' => 45,
    '#maxlength' => 50,
    '#required' => TRUE,
    '#description' => t('Ex. 374542984235'),
    '#default_value' => variable_get('fb_fan_profile_id', ''),
  );
  $form['fb_fan_general_settings']['fb_fan_connections'] = array(
    '#title' => t('Connection Amount'),
    '#type' => "textfield",
    '#size' => 45,
    '#maxlength' => 50,
    '#required' => TRUE,
    '#description' => t('Number of fans to display'),
    '#default_value' => variable_get('fb_fan_connections', ''),
  );
  $form['fb_fan_general_settings']['fb_fan_width'] = array(
    '#title' => t('Width'),
    '#type' => "textfield",
    '#size' => 45,
    '#maxlength' => 50,
    '#required' => TRUE,
    '#description' => t('Width of the fan box'),
    '#default_value' => variable_get('fb_fan_width', ''),
  );
  $form['fb_fan_general_settings']['fb_fan_height'] = array(
    '#title' => t('Height'),
    '#type' => "textfield",
    '#size' => 45,
    '#maxlength' => 50,
    '#required' => TRUE,
    '#description' => t('Height of the fan box'),
    '#default_value' => variable_get('fb_fan_height', ''),
  );
  $form['fb_fan_general_settings']['fb_fan_css_path'] = array(
    '#title' => t('CSS Path. If not set, PATH_TO_THEME/css/fb_fan.css will be used.'),
    '#type' => "textfield",
    '#size' => 45,
    '#maxlength' => 255,
    '#required' => FALSE,
    '#description' => t('Ex. http://example.com/style.css'),
    '#default_value' => variable_get('fb_fan_css_path', ''),
  );
  $form['fb_fan_general_settings']['fb_fan_stream'] = array(
    '#title' => t('Stream'),
    '#type' => "checkbox",
    '#description' => t('Show postings from the Facebook page'),
    '#default_value' => variable_get('fb_fan_stream', '1'),
  );
  $form['fb_fan_general_settings']['fb_fan_logo'] = array(
    '#title' => t('Facebook Logo'),
    '#type' => "checkbox",
    '#description' => t('Show the Facebook logo'),
    '#default_value' => variable_get('fb_fan_logo', '1'),
  );
  $form['fb_fan_general_settings']['fb_fan_header'] = array(
    '#title' => t('Facebook Header'),
    '#type' => "checkbox",
    '#description' => t('Show the Facebook Header'),
    '#default_value' => variable_get('fb_fan_header', '1'),
  );
  return system_settings_form($form);
}

/**
 * Implements of hook_block_info().
 */
function fb_fan_block_info() {
  $blocks = array();
  $blocks['facebook_fan'] = array(
    'info' => t('Facebook Fan'),
    'cache' => DRUPAL_NO_CACHE,
  );
  return $blocks;
}

/**
 * Implements of hook_block_view().
 */
function fb_fan_block_view($block_name = '') {
  if ($block_name = 'facebook_fan') {
    $css = variable_get('fb_fan_css_path', FALSE);
    if (!$css) {
      $css = 'http://' . $_SERVER['HTTP_HOST'] . '/' . path_to_theme() . '/css/fb_fan.css?' . rand(1, 1000000);
    }
    else
    {
      $css .= '?' . rand(1, 1000000);
    }
    $api_key = variable_get('fb_fan_api_key', FALSE);
    $profile_id = variable_get('fb_fan_profile_id', FALSE);
    $stream = variable_get('fb_fan_stream', 1);
    $connection = variable_get('fb_fan_connections', FALSE);
    $logo = variable_get('fb_fan_logo', 1);
    $header = variable_get('fb_fan_header', 1);
    $width = variable_get('fb_fan_width', FALSE);
    $height = variable_get('fb_fan_height', FALSE);
    global $language;
    $fb_lang = variable_get('fb_language_' . $language->language, 'en_US');

    $content = '';
    $content .= '<div id="fb-root"></div>';
    //$content .= '<script src="http://connect.facebook.net/' . $fb_lang . '/all.js#xfbml=1"></script>';
    //$content .= '<script src="http://static.ak.connect.facebook.com/js/api_lib/v0.4/FeatureLoader.js.php/et_EE"></script>';
    $content .= '<script type="text/javascript">FB.init("' . $api_key . '");</script>';
    $content .= '<fb:fan profile_id="' . $profile_id . '"  width="' . $width . '" height="' . $height . '" show_faces="true"  stream="' . $stream . '" header="' . $header . '" connections= "18" css="' . $css . '" logobar="' . $logo . '"></fb:fan>';

    $block = array(
      'subject' => t('Facebook Fan'),
      'content' => $content,
    );
    return $block;
  }
}
